#!/bin/bash

export RCPORT=44000
[ "$1" != "" ] && RCPORT=$1

export HOSTIP=127.0.0.1
export TLUIP=127.0.0.1
export HOSTNAME=127.0.0.1

cd `dirname $0`
export LD_LIBRARY_PATH="`pwd`/bin:$LD_LIBRARY_PATH"

EUDAQDIR=/home/ilcdaq/eudaq
EUDAQBIN=$EUDAQDIR/bin
CALEUDAQ=/home/ilcdaq/calice_eudaq
DATADIR=/home/ilcdaq/eudaq_data

printf '\033[1;32;48m \t STARTING DAQ LOCALLY\033[0m \n'
echo $(date)
printf '\033[22;33m\t Cleaning up first...  \033[0m \n'

if [ -f KILLRUN.local ]
then
    sh KILLRUN.local
else
    sh KILLRUN
fi

printf '\033[22;31m\t End of killall \033[0m \n'

sleep 1

######################################################################
#if [ -n "`ls data/run*.raw`" ]
#then
#    printf '\033[22;33m\t Making sure all data files are properly writeprotected \033[0m \n'
#    chmod a=rw data/run*.raw
#    printf '\033[22;32m\t ...Done!\033[0m \n'
#fi

cd $DATADIR/data
#=====================================================================
printf '\033[22;33m\t Starting Subprocesses \033[0m \n'
#=====================================================================
######################################################################
# euRun
###############
printf '\033[22;33m\t RunControl \033[0m \n'
$EUDAQBIN/euRun.exe -x 0 -y 0 -w 650 -g 550 -a tcp://$RCPORT &
sleep 1
######################################################################
# euLog
###############
printf '\033[22;33m\t Logger  \033[0m \n'
$EUDAQBIN/euLog.exe -x 0 -y 550 -w 1500 -g 450 -r tcp://$HOSTIP:44000 | tee $LOGFILE &
sleep 3
######################################################################
# DataCollector
###############
printf '\033[22;33m\t caliceDataCollector \033[0m \n'
#xterm -sb -sl 1000 -geom 80x10-480-900 -fn fixed -T "Data Collector" -e "./caliceDataCollector -r tcp://$HOSTIP:$RCPORT" &
$CALEUDAQ/caliceDataCollector -r tcp://$HOSTIP:$RCPORT &
sleep 3
######################################################################
# NI Producer
###############
# if [ -f "NiProducer.exe" ]
# then
#     printf '\033[22;33m\t  NiProducer for linux  \033[0m \n'
#     xterm -sb -sl 1000 -geom 80x10-480-700 -T 'Ni Producer for Linux' -e './NiProducer.exe -r tcp://$HOSTIP:$RCPORT' &
#     sleep 1
# else
#     printf '\033[22;31m\t  NiProducer for linux not found!  \033[0m \n'
#     echo 'Configure EUDAQ with the CMake option "-D BUILD_ni=ON" and re-run "make install" to install.'
# fi
######################################################################
# producer
###############
printf '\033[22;33m\t  caliceProducer-silicon  \033[0m \n'
#xterm -sb -sl 1000 -geom 80x10-480-500 -T 'Producer' -e './caliceProducer -r tcp://$TLUIP:$RCPORT' &
$CALEUDAQ/caliceProducer -n CaliceSi -r tcp://$TLUIP:$RCPORT &
printf '\033[22;33m\t  caliceProducer-scintillator  \033[0m \n'
$CALEUDAQ/caliceProducer -n CaliceSc -r tcp://$TLUIP:$RCPORT &

#sleep 1
# else
#     printf '\033[22;31m\t  TLUProducer not found! \033[0m \n'
#     echo 'Configure EUDAQ with the CMake option "-D BUILD_tlu=ON" and re-run "make install" to install.'
# fi
#####################################################################
######################################################################
# Online Monitor
###############
# if [ -f "OnlineMon.exe" ]
# then
#     printf '\033[22;33m\t  Online Monitor  \033[0m \n'
#     ./OnlineMon.exe  -sc 10 -s 0 -tc 0 -r tcp://$HOSTIP:$RCPORT &
# else
#     printf '\033[22;31m\t  Online monitor not found! \033[0m \n'
#     echo 'Configure EUDAQ with the CMake option "-D BUILD_onlinemon=ON" and re-run "make install" to install.'
# fi
#####################################################################


printf ' \n'
printf ' \n'
printf ' \n'
printf '\033[1;32;48m\t ...Done!\033[0m \n'
printf '\033[1;32;48mSTART OF DAQ COMPLETE\033[0m \n'
